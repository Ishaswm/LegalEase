apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: lexi-simplify
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
spec:
  template:
    metadata:
      annotations:
        # Resource allocation
        run.googleapis.com/memory: "2Gi"
        run.googleapis.com/cpu: "1"
        
        # Scaling configuration
        autoscaling.knative.dev/maxScale: "10"
        autoscaling.knative.dev/minScale: "0"
        
        # Request timeout
        run.googleapis.com/timeout: "300s"
        
        # Concurrency
        run.googleapis.com/execution-environment: gen2
        
        # VPC connector (if needed for private resources)
        # run.googleapis.com/vpc-access-connector: projects/PROJECT_ID/locations/REGION/connectors/CONNECTOR_NAME
        
    spec:
      containerConcurrency: 10
      timeoutSeconds: 300
      containers:
      - image: gcr.io/PROJECT_ID/lexi-simplify:latest
        ports:
        - containerPort: 8080
        env:
        - name: FLASK_ENV
          value: "production"
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: VERTEX_AI_LOCATION
          value: "us-central1"
        - name: MAX_FILE_SIZE
          value: "10485760"
        - name: SESSION_TIMEOUT
          value: "3600"
        - name: PORT
          value: "8080"
        # Uncomment to use Gemini API directly
        # - name: GEMINI_API_KEY
        #   valueFrom:
        #     secretKeyRef:
        #       name: gemini-api-key
        #       key: key
        
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
            
        # Health check
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
            
  traffic:
  - percent: 100
    latestRevision: true